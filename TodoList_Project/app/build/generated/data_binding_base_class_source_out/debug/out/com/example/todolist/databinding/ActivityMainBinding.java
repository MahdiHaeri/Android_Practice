// Generated by view binder compiler. Do not edit!
package com.example.todolist.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.todolist.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText assignByTp;

  @NonNull
  public final EditText assignToTp;

  @NonNull
  public final EditText enterChoreTp;

  @NonNull
  public final Button saveChoreButton;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull EditText assignByTp,
      @NonNull EditText assignToTp, @NonNull EditText enterChoreTp,
      @NonNull Button saveChoreButton) {
    this.rootView = rootView;
    this.assignByTp = assignByTp;
    this.assignToTp = assignToTp;
    this.enterChoreTp = enterChoreTp;
    this.saveChoreButton = saveChoreButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.assignByTp;
      EditText assignByTp = ViewBindings.findChildViewById(rootView, id);
      if (assignByTp == null) {
        break missingId;
      }

      id = R.id.assignToTp;
      EditText assignToTp = ViewBindings.findChildViewById(rootView, id);
      if (assignToTp == null) {
        break missingId;
      }

      id = R.id.enterChoreTp;
      EditText enterChoreTp = ViewBindings.findChildViewById(rootView, id);
      if (enterChoreTp == null) {
        break missingId;
      }

      id = R.id.saveChoreButton;
      Button saveChoreButton = ViewBindings.findChildViewById(rootView, id);
      if (saveChoreButton == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, assignByTp, assignToTp,
          enterChoreTp, saveChoreButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
