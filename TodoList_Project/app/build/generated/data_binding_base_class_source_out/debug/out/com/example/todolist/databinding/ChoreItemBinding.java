// Generated by view binder compiler. Do not edit!
package com.example.todolist.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.todolist.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChoreItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView assignByTextView;

  @NonNull
  public final TextView assignToTextView;

  @NonNull
  public final ImageView choreImageView;

  @NonNull
  public final TextView choreNameTextView;

  @NonNull
  public final TextView dateTextView;

  @NonNull
  public final ImageButton deleteChoreButton;

  @NonNull
  public final ImageButton editChoreButton;

  private ChoreItemBinding(@NonNull ConstraintLayout rootView, @NonNull TextView assignByTextView,
      @NonNull TextView assignToTextView, @NonNull ImageView choreImageView,
      @NonNull TextView choreNameTextView, @NonNull TextView dateTextView,
      @NonNull ImageButton deleteChoreButton, @NonNull ImageButton editChoreButton) {
    this.rootView = rootView;
    this.assignByTextView = assignByTextView;
    this.assignToTextView = assignToTextView;
    this.choreImageView = choreImageView;
    this.choreNameTextView = choreNameTextView;
    this.dateTextView = dateTextView;
    this.deleteChoreButton = deleteChoreButton;
    this.editChoreButton = editChoreButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ChoreItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChoreItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.chore_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChoreItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.assignByTextView;
      TextView assignByTextView = ViewBindings.findChildViewById(rootView, id);
      if (assignByTextView == null) {
        break missingId;
      }

      id = R.id.assignToTextView;
      TextView assignToTextView = ViewBindings.findChildViewById(rootView, id);
      if (assignToTextView == null) {
        break missingId;
      }

      id = R.id.choreImageView;
      ImageView choreImageView = ViewBindings.findChildViewById(rootView, id);
      if (choreImageView == null) {
        break missingId;
      }

      id = R.id.choreNameTextView;
      TextView choreNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (choreNameTextView == null) {
        break missingId;
      }

      id = R.id.dateTextView;
      TextView dateTextView = ViewBindings.findChildViewById(rootView, id);
      if (dateTextView == null) {
        break missingId;
      }

      id = R.id.deleteChoreButton;
      ImageButton deleteChoreButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteChoreButton == null) {
        break missingId;
      }

      id = R.id.editChoreButton;
      ImageButton editChoreButton = ViewBindings.findChildViewById(rootView, id);
      if (editChoreButton == null) {
        break missingId;
      }

      return new ChoreItemBinding((ConstraintLayout) rootView, assignByTextView, assignToTextView,
          choreImageView, choreNameTextView, dateTextView, deleteChoreButton, editChoreButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
